# ==========
# BSPWM KEYS
# ==========

# quit/restart bspwm
super + shift + e
	sh $HOME/.config/rofi/launchers/powermenub.sh

# restart bspwm
super + shift + Escape
	bspc wm -r

 close and kill
super + {_,shift + }q
	bspc node -{c,k}

# alternate between the tiled and monocle layout
super + m
	bspc desktop -l monocle
super + Right
	bspc node -f next.local
super + Left
	bspc node -f prev.local

# send the newest marked node to the newest preselected node
super + y
	bspc node newest.marked.local -n newest.!automatic.local

# send the focused window to last preselection
super + ctrl + o
	bspc node -n 'last.!automatic'

# swap the current node and the biggest node (.local ensures it is the same desktop)
super + g
	bspc node -s biggest.local

# ===========
# STATE/FLAGS
# ===========

# set the window state
super + {t,shift + t,s,f}
	bspc node -t {\~tiled,\~pseudo_tiled,\~floating,\~fullscreen}

# set the node flags
super + ctrl + {m,u,x,y,z}
	bspc node -g {marked,hidden,locked,sticky,private}

# unhide windows
super + shift + u
	bspc node $(bspc query -N -n .hidden | tail -n1) -g hidden=off

# ==========
# FOCUS/SWAP
# ==========

# focus the node in the given direction
super + {_,shift + }{h,j,k,l}
	bspc node -{f,s} {west,south,north,east}

# focus the node for the given path jump
super + {p,b,comma,period}
	bspc node -f @{parent,brother,first,second}

# focus the next/previous node in the current desktop
super + {_,shift + }c
	bspc node -f {next,prev}.local

# focus the next occupied desktop in the current monitor
super + bracketright
	bspc desktop -f next.local.occupied
# focus the previous occupied desktop in the current monitor
super + bracketleft
	bspc desktop -f prev.local.occupied

# focus the last node/desktop
super + {grave,Tab}
	bspc {node,desktop} -f last

# focus the older or newer node in the focus history
super + {o,i}
	bspc wm -h off; \
	bspc node {older,newer} -f; \
	bspc wm -h on

# focus or send to the given desktop
super + {_,shift + }{1-9,0}
	bspc {desktop -f,node -d} '^{1-9,10}'

# ============
# PRESELECTION
# ============

# preselect the direction
super + ctrl + {h,j,k,l}
	bspc node -p {west,south,north,east}

# preselect the ratio
super + ctrl + {1-9}
	bspc node -o 0.{1-9}

# cancel the preselection for the focused node
super + ctrl + space
	bspc node -p cancel

# cancel the preselection for the focused desktop
super + ctrl + shift + space
	bspc query -N -d | xargs -I id -n 1 bspc node id -p cancel

# ===========
# MOVE/RESIZE
# ===========

# resize (press the left combination, then use hjkl to resize. Escape stops the resize
#super + r : {h,j,k,l}
#	bsp_resize {west,south,north,east} 50

# expand a window by moving one of its side outward
super + alt + {h,j,k,l}
	bspc node -z {left -20 0,bottom 0 20,top 0 -20,right 20 0}

# contract a window by moving one of its side inward
super + alt + shift + {h,j,k,l}
	bspc node -z {right -20 0,top 0 20,bottom 0 -20,left 20 0}

# move a floating window
super + {Left,Down,Up,Right}
	bspc node -v {-20 0,0 20,0 -20,20 0}

# rotate windows
super + {_,shift + }r
	bspc node @/ --rotate {90,-90}
# ====
# GAPS
# ====

# dynamic gaps
super + shift + {minus,plus}
	bspc config -d focused window_gap "$(($(bspc config -d focused window_gap) {-,+} 5 ))"

# default gap
super + equal
	bspc config -d focused window_gap 10


# =============================== #
# ===== WM INDEPENDENT KEYS ===== #
# =============================== #

# terminal emulator
super + Return
	$TERMINAL

# program launcher
super + d
	dmenu_run -l 20 -c -bw 2
super + shift + Return
	rofi -modi drun -show drun -show-icons

# GRAPHICAL PROGRAMS
# ------------------
# browser
ctrl + alt + i
	brave

# TERMINAL PROGRAMS
# -----------------
# file manager
ctrl + alt + f
	$TERMINAL -e lf

# mail
ctrl + alt + e
	$TERMINAL -e neomutt

# calcurse
ctrl + alt + c
	$TERMINAL -e calcurse

# Music (ncmpcpp)
ctrl + alt + m
	$TERMINAL -t "ncmpcpp" -e ncmpcpp

ctrl + alt + n
	$TERMINAL -e newsboat; pkill -RTMIN+6 dwmblocks

# SCRIPTS
# -------
# config files
ctrl + shift + i
	dmenu-configs

# document finder
ctrl + shift + p
	finder

# lockscreen
ctrl + alt + l
	i3lock -k --blur=sigma

# recording
ctrl + alt + r
	dmenurecord

# kill compton
ctrl + alt + c; k
	killall compton && notify-send 'Compton - OFF'

# start compton
ctrl + alt + c; s
	compton -b --config ~/.config/compton/compton.conf && notify-send 'Compton - ON'

# make sxhkd reload its configuration files:
super + Escape
	pkill -USR1 -x sxhkd

# ====================== #
# ===== MEDIA KEY S===== #
# ====================== #

XF86MonBrightnessUp
	brightnessControl up
XF86MonBrightnessDown
	brightnessControl down

XF86AudioRaiseVolume
	pamixer --allow-boost -i 5; kill -44 $(pidof dwmblocks)
 
XF86AudioLowerVolume
	pamixer --allow-boost -d 5; kill -44 $(pidof dwmblocks)

XF86AudioMute
	pamixer -t; kill -44 $(pidof dwmblocks)

XF86AudioPlay
	mpc toggle
XF86AudioStop
	mpc stop
XF86AudioNext
	mpc next
XF86AudioPrev
	mpc prev
 
super + less
	mpc seek -10
super + greater
	mpc seek +10

# ====================================== #
# MEDIA CONTROL WITHOUT MEDIA KEYS ===== #
# ====================================== #

super + KP_Multiply
	pamixer -t; kill -44 $(pidof dwmblocks)
#
super + KP_Subtract
	pamixer --allow-boost -d 5; kill -44 $(pidof dwmblocks)

super + KP_Add
	pamixer --allow-boost -i 5; kill -44 $(pidof dwmblocks)

super + Right
	mpc next
super + Left
	mpc prev
super + Down
	mpc toggle
super + Up
	mpc toggle

super + KP_Insert
	brightnessControl down
super + KP_Delete
	brightnessControl up

# screenshots
Print
	scrot '%Y-%m-%d_%T.png' -e 'mv $f ~/imagens/screenshots' && notify-send "Captura de tela salva em ~/imagens/screenshots"

shift + @Print
	scrot -s '%Y-%m-%d_%T.png' -e 'mv $f ~/imagens/screenshots' && notify-send "Captura de tela salva em ~/imagens/screenshots"

super + F3
	pamixer --allow-boost -d 5; kill -44 $(pidof dwmblocks)

super + F4
	pamixer --allow-boost -i 5; kill -44 $(pidof dwmblocks)
